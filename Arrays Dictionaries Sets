//Big-O notation
//running time
//O(1) single unit of work
//linear time O(N)  
//array zero-indexed
let evenNumbers = [2,4,6,8]  //Int
let evenNumbers: [Int] = [2,4,6,8]
var subscribers: [String] = []
let allZeros = Array(repeating:0, count:5) //[0,0,0,0,0]
let vowels = ["A", "E", "I", "O", "U"] //string

//
var players = ["Alice", "Bob", "Cindy", "Dan"]
print(players.isEmpty) //false  isEmpty property
if players.count < 2 {
    print ("We need at least two players!")
} else {
    print("Let`s start!")
}

var currentPlayer = players.first

currentPlayer = players.min()
print(currentPlayer as Any)
//
func isElimonated(player: String) -> Bool {
    !players.contains(player)
}
print(isElimonated(player: "Bob")) //false
players[1...3].contains("Bob") //true


// appending elements
var players = ["Alice", "Bob", "Cindy", "Dan"]
players.append("Eli")
players += ["Gina"]

//insert elements
var players = ["Alice", "Bob", "Cindy", "Dan"]
players.insert("Frank", at:4) // zero-indexed

//removing elements
var removedPlayer = players.removeLast()
removedPlayer = players.remove(at:2)

//updating elements
var players = ["Alice", "Bob", "Cindy", "Dan"]
players[4] = ["Franklin"]

//moving elements
var players = ["Alice", "Bob", "Cindy", "Dan"]
let playerBob = players.remove(at: 1)
players.insert(playerBob, at: 0)
print(players)

//swapping elements
players.swapAt(1, 3)
print(players)

//sort elements
players.sort()

